{"ast":null,"code":"var _jsxFileName = \"/Users/at-mac07/Documents/github/crmfront/src/Home.js\",\n  _s = $RefreshSig$();\nimport React, { useMemo } from 'react';\nimport { Bar, Line } from 'react-chartjs-2';\nimport { useTable } from 'react-table';\nimport Navbar from './Navbar';\nimport { Chart, registerables } from 'chart.js'; // Importing Chart and registerables\nimport './Home.css';\n//import sampleImage from './path/to/your/image.jpg'; // Adjust the path to your image\n\n// Register the chart components\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChart.register(...registerables);\n\n// Sample data for bar chart\nconst barChartData = {\n  labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n  datasets: [{\n    label: 'Sales',\n    data: [65, 59, 80, 81, 56, 55, 40],\n    backgroundColor: 'rgba(75, 192, 192, 0.6)',\n    borderColor: 'rgba(75, 192, 192, 1)',\n    borderWidth: 1\n  }]\n};\n\n// Sample data for line chart\nconst lineChartData = {\n  labels: ['Week 1', 'Week 2', 'Week 3', 'Week 4'],\n  datasets: [{\n    label: 'Expenses',\n    data: [200, 300, 250, 400],\n    fill: false,\n    backgroundColor: 'rgba(153, 102, 255, 0.6)',\n    borderColor: 'rgba(153, 102, 255, 1)',\n    tension: 0.1\n  }]\n};\n\n// Sample data for table\nconst tableData = [{\n  id: 1,\n  name: 'John Doe',\n  age: 28,\n  email: 'john@example.com'\n}, {\n  id: 2,\n  name: 'Jane Smith',\n  age: 34,\n  email: 'jane@example.com'\n}, {\n  id: 3,\n  name: 'Alice Johnson',\n  age: 45,\n  email: 'alice@example.com'\n}, {\n  id: 4,\n  name: 'Bob Brown',\n  age: 23,\n  email: 'bob@example.com'\n}];\n\n// Columns definition for the table\nconst columns = [{\n  Header: 'ID',\n  accessor: 'id'\n}, {\n  Header: 'Name',\n  accessor: 'name'\n}, {\n  Header: 'Age',\n  accessor: 'age'\n}, {\n  Header: 'Email',\n  accessor: 'email'\n}];\nconst Home = () => {\n  _s();\n  const data = useMemo(() => tableData, []);\n  const columnDefs = useMemo(() => columns, []);\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow\n  } = useTable({\n    columns: columnDefs,\n    data\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Welcome to the Dashboard!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Sales Chart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Bar, {\n      data: barChartData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Expenses Chart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Line, {\n      data: lineChartData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"User Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      ...getTableProps(),\n      style: {\n        width: '100%',\n        marginTop: '20px',\n        border: '1px solid #ddd'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", {\n          ...headerGroup.getHeaderGroupProps(),\n          children: headerGroup.headers.map(column => /*#__PURE__*/_jsxDEV(\"th\", {\n            ...column.getHeaderProps(),\n            style: {\n              border: '1px solid #ddd',\n              padding: '8px'\n            },\n            children: column.render('Header')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        ...getTableBodyProps(),\n        children: rows.map(row => {\n          prepareRow(row);\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            ...row.getRowProps(),\n            children: row.cells.map(cell => /*#__PURE__*/_jsxDEV(\"td\", {\n              ...cell.getCellProps(),\n              style: {\n                border: '1px solid #ddd',\n                padding: '8px'\n              },\n              children: cell.render('Cell')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"U1kcBcXmgmzK7LRX7EWlhjFx8SI=\", false, function () {\n  return [useTable];\n});\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useMemo","Bar","Line","useTable","Navbar","Chart","registerables","jsxDEV","_jsxDEV","register","barChartData","labels","datasets","label","data","backgroundColor","borderColor","borderWidth","lineChartData","fill","tension","tableData","id","name","age","email","columns","Header","accessor","Home","_s","columnDefs","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","width","marginTop","border","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","padding","render","row","getRowProps","cells","cell","getCellProps","_c","$RefreshReg$"],"sources":["/Users/at-mac07/Documents/github/crmfront/src/Home.js"],"sourcesContent":["import React, { useMemo } from 'react';\nimport { Bar, Line } from 'react-chartjs-2';\nimport { useTable } from 'react-table';\nimport Navbar from './Navbar';\nimport { Chart, registerables } from 'chart.js'; // Importing Chart and registerables\nimport './Home.css';\n//import sampleImage from './path/to/your/image.jpg'; // Adjust the path to your image\n\n// Register the chart components\nChart.register(...registerables);\n\n// Sample data for bar chart\nconst barChartData = {\n  labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n  datasets: [{\n    label: 'Sales',\n    data: [65, 59, 80, 81, 56, 55, 40],\n    backgroundColor: 'rgba(75, 192, 192, 0.6)',\n    borderColor: 'rgba(75, 192, 192, 1)',\n    borderWidth: 1,\n  }],\n};\n\n// Sample data for line chart\nconst lineChartData = {\n  labels: ['Week 1', 'Week 2', 'Week 3', 'Week 4'],\n  datasets: [{\n    label: 'Expenses',\n    data: [200, 300, 250, 400],\n    fill: false,\n    backgroundColor: 'rgba(153, 102, 255, 0.6)',\n    borderColor: 'rgba(153, 102, 255, 1)',\n    tension: 0.1,\n  }],\n};\n\n// Sample data for table\nconst tableData = [\n  { id: 1, name: 'John Doe', age: 28, email: 'john@example.com' },\n  { id: 2, name: 'Jane Smith', age: 34, email: 'jane@example.com' },\n  { id: 3, name: 'Alice Johnson', age: 45, email: 'alice@example.com' },\n  { id: 4, name: 'Bob Brown', age: 23, email: 'bob@example.com' },\n];\n\n// Columns definition for the table\nconst columns = [\n  { Header: 'ID', accessor: 'id' },\n  { Header: 'Name', accessor: 'name' },\n  { Header: 'Age', accessor: 'age' },\n  { Header: 'Email', accessor: 'email' },\n];\n\nconst Home = () => {\n  const data = useMemo(() => tableData, []);\n  const columnDefs = useMemo(() => columns, []);\n\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow,\n  } = useTable({ columns: columnDefs, data });\n\n  return (\n    <div className=\"container\">\n      <Navbar />\n      <h1>Welcome to the Dashboard!</h1>\n\n      {/* Bar Chart Section */}\n      <h2>Sales Chart</h2>\n      <Bar data={barChartData} />\n\n      {/* Line Chart Section */}\n      <h2>Expenses Chart</h2>\n      <Line data={lineChartData} />\n\n      {/* Image Section\n      <h2>Sample Image</h2>\n      <img src={sampleImage} alt=\"Sample\" style={{ width: '100%', maxWidth: '600px', marginTop: '20px' }} /> */}\n\n      {/* User Data Table Section */}\n      <h2>User Data</h2>\n      <table {...getTableProps()} style={{ width: '100%', marginTop: '20px', border: '1px solid #ddd' }}>\n        <thead>\n          {headerGroups.map(headerGroup => (\n            <tr {...headerGroup.getHeaderGroupProps()}>\n              {headerGroup.headers.map(column => (\n                <th {...column.getHeaderProps()} style={{ border: '1px solid #ddd', padding: '8px' }}>\n                  {column.render('Header')}\n                </th>\n              ))}\n            </tr>\n          ))}\n        </thead>\n        <tbody {...getTableBodyProps()}>\n          {rows.map(row => {\n            prepareRow(row);\n            return (\n              <tr {...row.getRowProps()}>\n                {row.cells.map(cell => (\n                  <td {...cell.getCellProps()} style={{ border: '1px solid #ddd', padding: '8px' }}>\n                    {cell.render('Cell')}\n                  </td>\n                ))}\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default Home;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}