{"ast":null,"code":"var _jsxFileName = \"/Users/at-mac07/Documents/github/crmfront/src/register.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { createClient } from '@supabase/supabase-js';\nimport { TextField, Button, Typography, Container, CircularProgress, Box } from '@mui/material';\n\n// Initialize the Supabase client\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst supabase = createClient(process.env.REACT_APP_SUPABASE_URL, process.env.REACT_APP_SUPABASE_ANON_KEY);\nconst Register = () => {\n  _s();\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(false);\n  const navigate = useNavigate();\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setError('');\n    setLoading(true);\n\n    // Check if passwords match\n    if (password !== confirmPassword) {\n      setError('Passwords do not match');\n      setLoading(false);\n      return;\n    }\n    try {\n      // Step 1: Sign up the user using Supabase auth\n      const {\n        data,\n        error: signUpError\n      } = await supabase.auth.signUp({\n        email,\n        password,\n        options: {\n          data: {\n            full_name: name\n          }\n        }\n      });\n      if (signUpError) throw signUpError;\n\n      // Step 2: Insert additional data into 'users' table\n      if (data.user) {\n        const {\n          error: insertError\n        } = await supabase.from('users') // Assuming 'users' is your table name\n        .insert([{\n          id: data.user.id,\n          full_name: name,\n          email\n        }]); // Add the fields you need\n\n        if (insertError) throw insertError;\n      }\n\n      // Notify the user to check their email if confirmation is required\n      if (data.user && !data.user.confirmed_at) {\n        setError('Please check your email to confirm your account.');\n      }\n      navigate('/'); // Redirect to login after successful registration\n    } catch (err) {\n      setError(err.message || 'An error occurred during registration.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"xs\",\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      flexDirection: \"column\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      mt: 4,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        component: \"h1\",\n        gutterBottom: true,\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(Typography, {\n        color: \"error\",\n        variant: \"body2\",\n        gutterBottom: true,\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Name\",\n          variant: \"outlined\",\n          fullWidth: true,\n          margin: \"normal\",\n          value: name,\n          onChange: e => setName(e.target.value),\n          required: true,\n          disabled: loading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Email\",\n          type: \"email\",\n          variant: \"outlined\",\n          fullWidth: true,\n          margin: \"normal\",\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          required: true,\n          disabled: loading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Password\",\n          type: \"password\",\n          variant: \"outlined\",\n          fullWidth: true,\n          margin: \"normal\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          required: true,\n          disabled: loading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Confirm Password\",\n          type: \"password\",\n          variant: \"outlined\",\n          fullWidth: true,\n          margin: \"normal\",\n          value: confirmPassword,\n          onChange: e => setConfirmPassword(e.target.value),\n          required: true,\n          disabled: loading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"contained\",\n          color: \"primary\",\n          fullWidth: true,\n          sx: {\n            marginTop: 2\n          },\n          disabled: loading,\n          children: loading ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n            size: 24\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 24\n          }, this) : 'Register'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n_s(Register, \"KasEBR4sb8ctWocB2xjzFgTdwH8=\", false, function () {\n  return [useNavigate];\n});\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","useNavigate","createClient","TextField","Button","Typography","Container","CircularProgress","Box","jsxDEV","_jsxDEV","supabase","process","env","REACT_APP_SUPABASE_URL","REACT_APP_SUPABASE_ANON_KEY","Register","_s","name","setName","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","error","setError","loading","setLoading","navigate","handleSubmit","e","preventDefault","data","signUpError","auth","signUp","options","full_name","user","insertError","from","insert","id","confirmed_at","err","message","maxWidth","children","display","flexDirection","justifyContent","alignItems","mt","variant","component","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","color","onSubmit","label","fullWidth","margin","value","onChange","target","required","disabled","type","sx","marginTop","size","_c","$RefreshReg$"],"sources":["/Users/at-mac07/Documents/github/crmfront/src/register.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { createClient } from '@supabase/supabase-js';\nimport {\n  TextField,\n  Button,\n  Typography,\n  Container,\n  CircularProgress,\n  Box,\n} from '@mui/material';\n\n// Initialize the Supabase client\nconst supabase = createClient(process.env.REACT_APP_SUPABASE_URL, process.env.REACT_APP_SUPABASE_ANON_KEY);\n\nconst Register = () => {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(false);\n  const navigate = useNavigate();\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setError('');\n    setLoading(true);\n\n    // Check if passwords match\n    if (password !== confirmPassword) {\n      setError('Passwords do not match');\n      setLoading(false);\n      return;\n    }\n\n    try {\n      // Step 1: Sign up the user using Supabase auth\n      const { data, error: signUpError } = await supabase.auth.signUp({\n        email,\n        password,\n        options: {\n          data: { full_name: name },\n        },\n      });\n\n      if (signUpError) throw signUpError;\n\n      // Step 2: Insert additional data into 'users' table\n      if (data.user) {\n        const { error: insertError } = await supabase\n          .from('users') // Assuming 'users' is your table name\n          .insert([{ id: data.user.id, full_name: name, email }]); // Add the fields you need\n\n        if (insertError) throw insertError;\n      }\n\n      // Notify the user to check their email if confirmation is required\n      if (data.user && !data.user.confirmed_at) {\n        setError('Please check your email to confirm your account.');\n      }\n\n      navigate('/'); // Redirect to login after successful registration\n    } catch (err) {\n      setError(err.message || 'An error occurred during registration.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <Container maxWidth=\"xs\">\n      <Box\n        display=\"flex\"\n        flexDirection=\"column\"\n        justifyContent=\"center\"\n        alignItems=\"center\"\n        mt={4}\n      >\n        <Typography variant=\"h4\" component=\"h1\" gutterBottom>\n          Register\n        </Typography>\n\n        {error && (\n          <Typography color=\"error\" variant=\"body2\" gutterBottom>\n            {error}\n          </Typography>\n        )}\n\n        <form onSubmit={handleSubmit}>\n          <TextField\n            label=\"Name\"\n            variant=\"outlined\"\n            fullWidth\n            margin=\"normal\"\n            value={name}\n            onChange={(e) => setName(e.target.value)}\n            required\n            disabled={loading}\n          />\n\n          <TextField\n            label=\"Email\"\n            type=\"email\"\n            variant=\"outlined\"\n            fullWidth\n            margin=\"normal\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n            required\n            disabled={loading}\n          />\n\n          <TextField\n            label=\"Password\"\n            type=\"password\"\n            variant=\"outlined\"\n            fullWidth\n            margin=\"normal\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n            required\n            disabled={loading}\n          />\n\n          <TextField\n            label=\"Confirm Password\"\n            type=\"password\"\n            variant=\"outlined\"\n            fullWidth\n            margin=\"normal\"\n            value={confirmPassword}\n            onChange={(e) => setConfirmPassword(e.target.value)}\n            required\n            disabled={loading}\n          />\n\n          <Button\n            type=\"submit\"\n            variant=\"contained\"\n            color=\"primary\"\n            fullWidth\n            sx={{ marginTop: 2 }}\n            disabled={loading}\n          >\n            {loading ? <CircularProgress size={24} /> : 'Register'}\n          </Button>\n        </form>\n      </Box>\n    </Container>\n  );\n};\n\nexport default Register;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}