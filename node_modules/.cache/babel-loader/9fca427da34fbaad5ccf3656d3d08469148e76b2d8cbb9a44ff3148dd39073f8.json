{"ast":null,"code":"var _jsxFileName = \"/Users/at-mac07/Documents/github/crmfront/src/Agents.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Navbar from './Navbar';\nimport './Agents.css';\n\n// Main Agents Component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Agents = () => {\n  _s();\n  const [comments, setComments] = useState([]);\n  const [author, setAuthor] = useState('');\n  const [text, setText] = useState('');\n  const handleCommentSubmit = e => {\n    e.preventDefault();\n    const newComment = {\n      id: Date.now(),\n      // Unique ID for each comment\n      author: author,\n      text: text,\n      timestamp: new Date().toLocaleString(),\n      replies: []\n    };\n    setComments([...comments, newComment]);\n    setAuthor('');\n    setText('');\n  };\n  const handleReplySubmit = (commentId, replyText) => {\n    const updatedComments = comments.map(comment => {\n      if (comment.id === commentId) {\n        const newReply = {\n          author: author,\n          text: replyText,\n          timestamp: new Date().toLocaleString()\n        };\n        return {\n          ...comment,\n          replies: [...comment.replies, newReply]\n        };\n      }\n      return comment;\n    });\n    setComments(updatedComments);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"agents-section\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Agents Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Comments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleCommentSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Your Name\",\n        value: author,\n        onChange: e => setAuthor(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Add a comment...\",\n        value: text,\n        onChange: e => setText(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comments-list\",\n      children: comments.map(comment => /*#__PURE__*/_jsxDEV(Comment, {\n        comment: comment,\n        onReply: handleReplySubmit\n      }, comment.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n};\n_s(Agents, \"Yi0eFlrZb0tgdVrsrTa/dLOFHYc=\");\n_c = Agents;\nexport default Agents;\nvar _c;\n$RefreshReg$(_c, \"Agents\");","map":{"version":3,"names":["React","useState","Navbar","jsxDEV","_jsxDEV","Agents","_s","comments","setComments","author","setAuthor","text","setText","handleCommentSubmit","e","preventDefault","newComment","id","Date","now","timestamp","toLocaleString","replies","handleReplySubmit","commentId","replyText","updatedComments","map","comment","newReply","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","required","Comment","onReply","_c","$RefreshReg$"],"sources":["/Users/at-mac07/Documents/github/crmfront/src/Agents.js"],"sourcesContent":["import React, { useState } from 'react';\nimport Navbar from './Navbar';\nimport './Agents.css';\n\n\n\n// Main Agents Component\nconst Agents = () => {\n    const [comments, setComments] = useState([]);\n    const [author, setAuthor] = useState('');\n    const [text, setText] = useState('');\n\n    const handleCommentSubmit = (e) => {\n        e.preventDefault();\n        const newComment = {\n            id: Date.now(), // Unique ID for each comment\n            author: author,\n            text: text,\n            timestamp: new Date().toLocaleString(),\n            replies: [],\n        };\n        setComments([...comments, newComment]);\n        setAuthor('');\n        setText('');\n    };\n\n    const handleReplySubmit = (commentId, replyText) => {\n        const updatedComments = comments.map(comment => {\n            if (comment.id === commentId) {\n                const newReply = {\n                    author: author,\n                    text: replyText,\n                    timestamp: new Date().toLocaleString(),\n                };\n                return { ...comment, replies: [...comment.replies, newReply] };\n            }\n            return comment;\n        });\n        setComments(updatedComments);\n    };\n\n    return (\n        <div className=\"agents-section\">\n            <Navbar />\n            <h1>Agents Page</h1>\n            <h2>Comments</h2>\n            <form onSubmit={handleCommentSubmit}>\n                <input\n                    type=\"text\"\n                    placeholder=\"Your Name\"\n                    value={author}\n                    onChange={(e) => setAuthor(e.target.value)}\n                    required\n                />\n                <textarea\n                    placeholder=\"Add a comment...\"\n                    value={text}\n                    onChange={(e) => setText(e.target.value)}\n                    required\n                />\n                <button type=\"submit\">Submit</button>\n            </form>\n            <div className=\"comments-list\">\n                {comments.map((comment) => (\n                    <Comment key={comment.id} comment={comment} onReply={handleReplySubmit} />\n                ))}\n            </div>\n        </div>\n    );\n};\n\nexport default Agents;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}