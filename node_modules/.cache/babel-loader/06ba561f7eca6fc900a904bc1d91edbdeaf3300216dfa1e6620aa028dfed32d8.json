{"ast":null,"code":"var _jsxFileName = \"/Users/at-mac07/Documents/github/crmfront/src/Agents.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Navbar from './Navbar';\nimport './Agents.css';\n\n// Reply Component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Reply = ({\n  reply\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"reply\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: [reply.author, \":\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 16\n      }, this), \" \", reply.text]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"timestamp\",\n      children: reply.timestamp\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 9\n  }, this);\n};\n\n// Comment Component\n_c = Reply;\nconst Comment = ({\n  comment,\n  onReply\n}) => {\n  _s();\n  const [showReplyInput, setShowReplyInput] = useState(false);\n  const [replyText, setReplyText] = useState('');\n  const handleReplySubmit = e => {\n    e.preventDefault();\n    onReply(comment.id, replyText);\n    setReplyText('');\n    setShowReplyInput(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"comment\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: [comment.author, \":\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 16\n      }, this), \" \", comment.text]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"timestamp\",\n      children: comment.timestamp\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setShowReplyInput(!showReplyInput),\n      children: showReplyInput ? 'Cancel' : 'Reply'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), showReplyInput && /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleReplySubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Add a reply...\",\n        value: replyText,\n        onChange: e => setReplyText(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit Reply\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"replies-list\",\n      children: comment.replies.map((reply, index) => /*#__PURE__*/_jsxDEV(Reply, {\n        reply: reply\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n\n// Main Agents Component\n_s(Comment, \"/ZP1HDElYyOYHbXTyS2qgfPL3tU=\");\n_c2 = Comment;\nconst Agents = () => {\n  _s2();\n  const [comments, setComments] = useState([]);\n  const [author, setAuthor] = useState('');\n  const [text, setText] = useState('');\n  const handleCommentSubmit = e => {\n    e.preventDefault();\n    const newComment = {\n      id: Date.now(),\n      // Unique ID for each comment\n      author: author,\n      text: text,\n      timestamp: new Date().toLocaleString(),\n      replies: []\n    };\n    setComments([...comments, newComment]);\n    setAuthor('');\n    setText('');\n  };\n  const handleReplySubmit = (commentId, replyText) => {\n    const updatedComments = comments.map(comment => {\n      if (comment.id === commentId) {\n        const newReply = {\n          author: author,\n          text: replyText,\n          timestamp: new Date().toLocaleString()\n        };\n        return {\n          ...comment,\n          replies: [...comment.replies, newReply]\n        };\n      }\n      return comment;\n    });\n    setComments(updatedComments);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"agents-section\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Agents Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Comments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleCommentSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Your Name\",\n        value: author,\n        onChange: e => setAuthor(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Add a comment...\",\n        value: text,\n        onChange: e => setText(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comments-list\",\n      children: comments.map(comment => /*#__PURE__*/_jsxDEV(Comment, {\n        comment: comment,\n        onReply: handleReplySubmit\n      }, comment.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 9\n  }, this);\n};\n_s2(Agents, \"Yi0eFlrZb0tgdVrsrTa/dLOFHYc=\");\n_c3 = Agents;\nexport default Agents;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Reply\");\n$RefreshReg$(_c2, \"Comment\");\n$RefreshReg$(_c3, \"Agents\");","map":{"version":3,"names":["React","useState","Navbar","jsxDEV","_jsxDEV","Reply","reply","className","children","author","fileName","_jsxFileName","lineNumber","columnNumber","text","timestamp","_c","Comment","comment","onReply","_s","showReplyInput","setShowReplyInput","replyText","setReplyText","handleReplySubmit","e","preventDefault","id","onClick","onSubmit","placeholder","value","onChange","target","required","type","replies","map","index","_c2","Agents","_s2","comments","setComments","setAuthor","setText","handleCommentSubmit","newComment","Date","now","toLocaleString","commentId","updatedComments","newReply","_c3","$RefreshReg$"],"sources":["/Users/at-mac07/Documents/github/crmfront/src/Agents.js"],"sourcesContent":["import React, { useState } from 'react';\nimport Navbar from './Navbar';\nimport './Agents.css';\n\n// Reply Component\nconst Reply = ({ reply }) => {\n    return (\n        <div className=\"reply\">\n            <p><strong>{reply.author}:</strong> {reply.text}</p>\n            <p className=\"timestamp\">{reply.timestamp}</p>\n        </div>\n    );\n};\n\n// Comment Component\nconst Comment = ({ comment, onReply }) => {\n    const [showReplyInput, setShowReplyInput] = useState(false);\n    const [replyText, setReplyText] = useState('');\n\n    const handleReplySubmit = (e) => {\n        e.preventDefault();\n        onReply(comment.id, replyText);\n        setReplyText('');\n        setShowReplyInput(false);\n    };\n\n    return (\n        <div className=\"comment\">\n            <p><strong>{comment.author}:</strong> {comment.text}</p>\n            <p className=\"timestamp\">{comment.timestamp}</p>\n            <button onClick={() => setShowReplyInput(!showReplyInput)}>\n                {showReplyInput ? 'Cancel' : 'Reply'}\n            </button>\n            {showReplyInput && (\n                <form onSubmit={handleReplySubmit}>\n                    <textarea\n                        placeholder=\"Add a reply...\"\n                        value={replyText}\n                        onChange={(e) => setReplyText(e.target.value)}\n                        required\n                    />\n                    <button type=\"submit\">Submit Reply</button>\n                </form>\n            )}\n            <div className=\"replies-list\">\n                {comment.replies.map((reply, index) => (\n                    <Reply key={index} reply={reply} />\n                ))}\n            </div>\n        </div>\n    );\n};\n\n// Main Agents Component\nconst Agents = () => {\n    const [comments, setComments] = useState([]);\n    const [author, setAuthor] = useState('');\n    const [text, setText] = useState('');\n\n    const handleCommentSubmit = (e) => {\n        e.preventDefault();\n        const newComment = {\n            id: Date.now(), // Unique ID for each comment\n            author: author,\n            text: text,\n            timestamp: new Date().toLocaleString(),\n            replies: [],\n        };\n        setComments([...comments, newComment]);\n        setAuthor('');\n        setText('');\n    };\n\n    const handleReplySubmit = (commentId, replyText) => {\n        const updatedComments = comments.map(comment => {\n            if (comment.id === commentId) {\n                const newReply = {\n                    author: author,\n                    text: replyText,\n                    timestamp: new Date().toLocaleString(),\n                };\n                return { ...comment, replies: [...comment.replies, newReply] };\n            }\n            return comment;\n        });\n        setComments(updatedComments);\n    };\n\n    return (\n        <div className=\"agents-section\">\n            <Navbar />\n            <h1>Agents Page</h1>\n            <h2>Comments</h2>\n            <form onSubmit={handleCommentSubmit}>\n                <input\n                    type=\"text\"\n                    placeholder=\"Your Name\"\n                    value={author}\n                    onChange={(e) => setAuthor(e.target.value)}\n                    required\n                />\n                <textarea\n                    placeholder=\"Add a comment...\"\n                    value={text}\n                    onChange={(e) => setText(e.target.value)}\n                    required\n                />\n                <button type=\"submit\">Submit</button>\n            </form>\n            <div className=\"comments-list\">\n                {comments.map((comment) => (\n                    <Comment key={comment.id} comment={comment} onReply={handleReplySubmit} />\n                ))}\n            </div>\n        </div>\n    );\n};\n\nexport default Agents;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}